Создайте массив Numpy под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов. Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7. Будем считать, что каждый столбец - это признак, а строка - наблюдение. Затем найдите среднее значение по каждому признаку, используя метод mean массива Numpy. Результат запишите в массив mean_a, в нем должно быть 2 элемента.

a = np.array(
    [[1, 2, 3, 3, 1], 
    [6, 8, 11, 10, 7]]
).transpose()
print(a)
[[ 1  6]
 [ 2  8]
 [ 3 11]
 [ 3 10]
 [ 1  7]]
mean_a = np.mean(a, axis = 0)
print(mean_a)
[2.  8.4]
################################# Задание 2 ################################
Вычислите массив a_centered, отняв от значений массива а средние значения соответствующих признаков, содержащиеся в массиве mean_a. Вычисление должно производиться в одно действие. Получившийся массив должен иметь размер 5x2.

a_centered = a - mean_a
print(a_centered)
[[-1.  -2.4]
 [ 0.  -0.4]
 [ 1.   2.6]
 [ 1.   1.6]
 [-1.  -1.4]]
################################# Задание 3 ################################
Найдите скалярное произведение столбцов массива a_centered. В результате должна получиться величина a_centered_sp. Затем поделите a_centered_sp на N-1, где N - число наблюдений.

a_centered_sp = a_centered.T[0] @ a_centered.T[1]
print(a_centered_sp)
8.0
a_centered_sp / (a_centered.shape[0] - 1)
2.0
################################# Задание 4 ################################
np.cov(a.T)[0, 1]
2.0
################################# Задание 1 ################################
Импортируйте библиотеку Pandas и дайте ей псевдоним pd.

import pandas as pd
authors = pd.DataFrame({'author_id':[1, 2, 3], 
                        'author_name':['Тургенев', 'Чехов', 'Островский']}, 
                       columns=['author_id', 'author_name'])
print(authors)
   author_id author_name
0          1    Тургенев
1          2       Чехов
2          3  Островский
book = pd.DataFrame({'author_id':[1, 1, 1, 2, 2, 3, 3], 
                     'book_title':['Отцы и дети', 'Рудин', 'Дворянское гнездо', 'Толстый и тонкий', 'Дама с собачкой', 'Гроза', 'Таланты и поклонники'], 
                     'price':[450, 300, 350, 500, 450, 370, 290]}, 
                    columns=['author_id', 'book_title', 'price'])
print(book)
   author_id            book_title  price
0          1           Отцы и дети    450
1          1                 Рудин    300
2          1     Дворянское гнездо    350
3          2      Толстый и тонкий    500
4          2       Дама с собачкой    450
5          3                 Гроза    370
6          3  Таланты и поклонники    290
################################# Задание 2 ################################
authors_price = pd.merge(authors, book, on = 'author_id', how = 'outer')
print(authors_price)
   author_id author_name            book_title  price
0          1    Тургенев           Отцы и дети    450
1          1    Тургенев                 Рудин    300
2          1    Тургенев     Дворянское гнездо    350
3          2       Чехов      Толстый и тонкий    500
4          2       Чехов       Дама с собачкой    450
5          3  Островский                 Гроза    370
6          3  Островский  Таланты и поклонники    290
################################# Задание 3 ################################
top5 = authors_price.nlargest(5, 'price')
print(top5)
   author_id author_name         book_title  price
3          2       Чехов   Толстый и тонкий    500
0          1    Тургенев        Отцы и дети    450
4          2       Чехов    Дама с собачкой    450
5          3  Островский              Гроза    370
2          1    Тургенев  Дворянское гнездо    350
################################# Задание 4 ################################
authors_stat = authors_price['author_name'].value_counts()
print(authors_stat)
Тургенев      3
Островский    2
Чехов         2
Name: author_name, dtype: int64
authors_stat = authors_price.groupby('author_name').agg({'price':['min', 'max', 'mean']})
authors_stat = authors_stat.rename(columns={'min':'min_price', 'max':'max_price', 'mean':'mean_price'})
print(authors_stat)
                price                      
            min_price max_price  mean_price
author_name                                
Островский        290       370  330.000000
Тургенев          300       450  366.666667
Чехов             450       500  475.000000
################################# Задание 5 ################################
authors_price['cover'] = ['твердая', 'мягкая', 'мягкая', 'твердая', 'твердая', 'мягкая', 'мягкая']
print(authors_price)
   author_id author_name            book_title  price    cover
0          1    Тургенев           Отцы и дети    450  твердая
1          1    Тургенев                 Рудин    300   мягкая
2          1    Тургенев     Дворянское гнездо    350   мягкая
3          2       Чехов      Толстый и тонкий    500  твердая
4          2       Чехов       Дама с собачкой    450  твердая
5          3  Островский                 Гроза    370   мягкая
6          3  Островский  Таланты и поклонники    290   мягкая
book_info = pd.pivot_table(authors_price, values='price', index=['author_name'], columns=['cover'], aggfunc=np.sum)
book_info['мягкая'] = book_info['мягкая'].fillna(0)
book_info['твердая'] = book_info['твердая'].fillna(0)
print(book_info)
cover        мягкая  твердая
author_name                 
Островский    660.0      0.0
Тургенев      650.0    450.0
Чехов           0.0    950.0
book_info.to_pickle('book_info.pkl')
book_info2 = pd.read_pickle('book_info.pkl')
book_info.equals(book_info2)
True
